---
import { pinnedPortfolio } from "../utils/portfolio"
import { pinnedSideProjects } from "../utils/side-projects"
import Project from "../components/project.astro"

type context = "PORTFOLIO" | "SIDE_PROJECTS"

interface Props {
  count: number
  context: context
  className?: string
}

type collection = {
  [name in context]: any
}

const { count, className = "", context = "PORTFOLIO" } = Astro.props

const portfolio = count ? pinnedPortfolio.slice(0, count) : pinnedPortfolio
const sideProjects = count
  ? pinnedSideProjects.slice(0, count)
  : pinnedSideProjects

const collection: collection = {
  PORTFOLIO: portfolio,
  SIDE_PROJECTS: sideProjects,
}

const hrefBase: collection = {
  PORTFOLIO: "portfolio",
  SIDE_PROJECTS: "side-projects",
}
---

<div
  class="grid w-full grid-rows-1 grid-cols-1 sm:grid-cols-2 gap-7 md:grid-cols-[1fr_1px_1fr_1px_1fr]"
  class:list={[className]}
>
  {
    collection[context].map((project: any) => {
      return (
        <>
          <Project
            name={project.data.title}
            description={project.data.description}
            image={project.data.image}
            company={project.data.company}
            slug={project.slug}
            layout="card"
            hrefBase={hrefBase[context]}
          />
          <div class="h-px w-full sm:hidden md:block md:h-full md:w-px dividerline-bg last:hidden" />
        </>
      )
    })
  }
</div>
