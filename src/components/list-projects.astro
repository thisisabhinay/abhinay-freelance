---
import { latestPortfolio } from "../utils/portfolio"
import { latestSideProjects } from "../utils/side-projects"
import Project from "../components/project.astro"
import BrandSeparator from "../components/brand-separator.astro"

type context = "PORTFOLIO" | "SIDE_PROJECTS"

interface Props {
  context: context
  count?: number
  className?: string
  company?: string
  brandLogo?: string
}

type collection = {
  [name in context]: any
}

const {
  count,
  company,
  brandLogo,
  className = "",
  context = "PORTFOLIO",
} = Astro.props

let portfolio
portfolio = company
  ? latestPortfolio.filter((project) => project.data.company === company)
  : latestPortfolio

portfolio = count ? portfolio.slice(0, count) : portfolio

const sideProjects = count
  ? latestSideProjects.slice(0, count)
  : latestSideProjects

const collection: collection = {
  PORTFOLIO: portfolio,
  SIDE_PROJECTS: sideProjects,
}

const hrefBase: collection = {
  PORTFOLIO: "portfolio",
  SIDE_PROJECTS: "side-projects",
}
---

{company ? <BrandSeparator text={company} brandLogo={brandLogo} /> : null}
<div class="divide-y dividerline" class:list={[className, !company ? "mt-20" : ""]}>
  {
    collection[context].map((project: any) => {
      return (
        <div class="py-4 first:pt-0">
          <Project
            name={project.data.title}
            description={project.data.description}
            image={project.data.image}
            company={project.data.company}
            slug={project.slug}
            hrefBase={hrefBase[context]}
            layout="list"
          />
        </div>
      )
    })
  }
</div>
